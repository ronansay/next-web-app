name: Build-E2E-Test-Release Next.js Web Application
on: 
  workflow_dispatch:

jobs:
  build-UnitTest:
    name: Build Unit Test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Install NPM Dependencies
      run: npm install
    - name: Build Run Cypress Unit Test
      uses: cypress-io/github-action@v6
      with:
          start: npm run dev
          start-windows: npm run start:windows:server
          # quote the url to be safe against YML parsing surprises
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
          spec: |
            cypress/e2e/UNIT_TEST_API/*.js
            cypress/e2e/UNIT_TEST_UI/*.js
          record: false 
    - name: Cypress Upload Artifacts Screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-screenshots
        path: cypress/screenshots
        retention-days: 1
  build-project:
    name: Build project
    runs-on: ubuntu-latest
    needs: build-UnitTest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
    - name: Install NPM Dependencies
      run: npm install
    - name: Build Project Asset & Run E2E Tests
      uses: cypress-io/github-action@v6
      with:
          build: npm run build
          start: npm run start
          start-windows: npm run start:windows:server
          # quote the url to be safe against YML parsing surprises
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 150
          spec: |
            cypress/e2e/E2E_TEST_API/*.js
            cypress/e2e/E2E_TEST_UI/*.js
          record: false 
    - name: Cypress Upload Artifacts Screenshots
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: cypress-screenshots
        path: cypress/screenshots
        retention-days: 1
    - name: Upload Static site content
      uses: actions/upload-artifact@v4
      with:
         name: static-site
         path: ./out
  release-project:
    name: Release Project
    runs-on: ubuntu-latest
    needs: build-project
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
         name: static-site
    - name: Test artifact download
      run: ls -R
    - name: Archive site content
      uses: thedoctor0/zip-release@main
      with:
        filename: site.zip
    - name: Create GitHub Release
      id: create-new-release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.run_number }}
        release_name: Release ${{ github.run_number }}
    - name: Uploade release assets
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create-new-release.outputs.upload_url }}
        asset_path: ./site.zip
        asset_name: site-v${{ github.run_number }}.zip
        asset_content_type: application/zip
  

      